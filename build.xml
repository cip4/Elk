<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE project SYSTEM "file:/Developer/Applications/apache-ant-1.6.2/dtd/ant.dtd"> -->
<project name="Elk" default="dist" basedir=".">
	<description>Compiles the Elk Framework source code and builds the Elk
        reference device web application and test tools.</description>
	<!-- Initializes -->
	<target name="-init" description="Initializes the build. This task is automatically run before building.">
		<echo>Initializing. Using build settings from ./build.properties...</echo>
		<!-- Sets properties -->
		<tstamp />
		<buildnumber file="build.number" />
		<property name="src.dir" value="./src" />
		<property name="java.src.dir" value="${src.dir}/java" />
		<property name="web.src.dir" value="${src.dir}/webapp" />
		<property name="test.src.dir" value="${src.dir}/test" />
		<property name="sendjmf.src.dir" value="${src.dir}/sendjmf" />
		<property name="lib.dir" value="./src/lib" />
		<property name="bin.dir" value="./bin" />
		<property name="dist.dir" value="./dist" />
		<property name="build.debug" value="true" />
		<property name="base.filename" value="elk-${DSTAMP}" />
		<property name="dist.src.dir" value="${dist.dir}/${base.filename}-src" />
		<property name="dist.bin.dir" value="${dist.dir}/${base.filename}-bin" />
		<property name="verbose" value="true" />
		<!-- Sets class path -->
		<path id="project.class.path">
			<pathelement path="${java.class.path}" />
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<!-- Creates directories -->
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	<target name="-tomcat-init" depends="-init">
		<echo>Initializing optional targets for deploying Elk directly into Tomcat...</echo>
		<!-- Tomcat tasks -->
		<!-- Configure the context path for this application -->
		<property name="path" value="/elk-printing" />
		<property name="war" value="elk-printing.war" />
		<!-- Configure properties to access the Manager application -->
		<property name="tomcat.url" value="http://localhost:8080/manager" />
		<property name="tomcat.username" value="admin" />
		<property name="tomcat.password" value="heidelberg" />
		<echo>Elk Context Path: ${path}</echo>
		<echo>Tomcat Manager URL: ${tomcat.url}</echo>
		<echo>Tomcat Manager Login: ${tomcat.username}/${tomcat.password}</echo>
		<echo>Loading Tomcat's Ant tasks. Make sure you have copied TOMCAT_HOME/server/lib/catalina-ant.jar to ANT_HOME/lib</echo>
		<!-- Configure the custom Ant tasks for the Manager application -->
		<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" />
		<taskdef name="install" classname="org.apache.catalina.ant.InstallTask" />
		<taskdef name="list" classname="org.apache.catalina.ant.ListTask" />
		<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
		<taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask" />
		<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" />
		<taskdef name="roles" classname="org.apache.catalina.ant.RolesTask" />
		<taskdef name="start" classname="org.apache.catalina.ant.StartTask" />
		<taskdef name="stop" classname="org.apache.catalina.ant.StopTask" />
		<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />
	</target>


	<target name="compile" depends="-init" description="Compiles the Elk source code.">
		<echo>Compiling...</echo>
		<javac destdir="${bin.dir}" debug="${build.debug}" target="1.4" source="1.4">
			<src path="${java.src.dir}" />
			<classpath refid="project.class.path" />
			<include name="**/*.java" />
			<exclude name="**/mule/*.java" />
		</javac>
		<copy todir="${bin.dir}">
			<fileset dir="${java.src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>
	<target name="jar" depends="compile" description="Bundles the Elk source code into a JAR file.">
		<echo>Building JAR file...</echo>
		<jar jarfile="${dist.dir}/${base.filename}.jar" basedir="${bin.dir}" />
	</target>
	<target name="clean" depends="-init" description="Cleans the build.">
		<echo>Cleaning...</echo>
		<delete dir="${bin.dir}" />
		<delete dir="${dist.dir}" />
	</target>
	<target name="sendjmf" depends="jar" description="Builds the SendJMF test tool for sending JMF messages.">
		<echo>Building the SendJMF test tool...</echo>
		<property name="sendjmf.dir" value="${dist.dir}/sendjmf" />
		<mkdir dir="${sendjmf.dir}" />
		<unzip src="${lib.dir}/commons-httpclient-2.0.2.jar" dest="${sendjmf.dir}" />
		<unzip src="${lib.dir}/commons-logging-1.0.4.jar" dest="${sendjmf.dir}" />
		<copy todir="${sendjmf.dir}">
			<fileset dir="${bin.dir}">
				<include name="org/cip4/elk/testtools/SendJMF.class" />
			</fileset>
			<!--
            <fileset dir="${sendjmf.src.dir}">
                <include name="**/*.*"/>
            </fileset>
            -->
		</copy>
		<jar jarfile="${dist.dir}/sendjmf.jar" basedir="${sendjmf.dir}" manifest="${sendjmf.src.dir}/META-INF/Manifest.mf" />
	</target>
	<target name="install" description="Install web application" depends="-tomcat-init">
		<echo>Deploying Elk web application to Tomcat...</echo>
		<install url="${tomcat.url}" username="${tomcat.username}" password="${tomcat.password}" path="${path}" war="file:${basedir}/${dist.dir}/${war}" />
	</target>
	<target name="redeploy" depends="-tomcat-init" description="Undeploys and redeploys the web application">
		<echo>Redeploying Elk web application to Tomcat... </echo>
		<undeploy url="${tomcat.url}" username="${tomcat.username}" password="${tomcat.password}" path="${path}" />
		<deploy url="${tomcat.url}" username="${tomcat.username}" password="${tomcat.password}" path="${path}" war="file:${basedir}/${dist.dir}/${war}" />
	</target>
	<target name="-test-init" description="Prepare for running JUnit tests" depends="-init">
		<echo>Preparing to run JUnit tests...</echo>
		<property name="test.src.dir" value="${src.dir}/test" />
		<property name="test.device.src.dir" value="${src.dir}/devices/ConventionalPrinting/webapp" />
		<property name="test.work.dir" value="${bin.dir}/test" />
		<property name="test.bin.dir" value="${test.work.dir}/bin" />
		<property name="test.data.dir" value="${test.work.dir}/data" />
		<property name="test.reports.dir" value="${test.work.dir}/reports" />
		<mkdir dir="${test.reports.dir}" />
		<mkdir dir="${test.bin.dir}" />
		<!-- Prepare test data -->
		<mkdir dir="${test.data.dir}" />
		<copy todir="${test.data.dir}">
			<fileset dir="${test.src.dir}/data" />
			<fileset file="${test.device.src.dir}/config/Device.xml" />
			<fileset file="${test.device.src.dir}/testdata/Device.xml" />
			<fileset file="${test.device.src.dir}/WEB-INF/classes/elk-spring-config.xml" />
			<fileset file="${test.device.src.dir}/WEB-INF/classes/beanRefFactory.xml" />
		</copy>
	</target>
	<target name="test" description="Runs JUnit tests" depends="-test-init,compile">
		<echo>Running JUnit tests...</echo>
		<!-- Compile test cases -->
		<javac destdir="${test.bin.dir}" debug="${build.debug}" target="1.4" source="1.4">
			<src path="${test.src.dir}" />
			<classpath refid="project.class.path" />
			<classpath path="${bin.dir}" />
			<include name="**/*.java" />
			<exclude name="**/mule/*.java" />
		</javac>
		<!-- Run test cases -->
		<junit fork="yes" timeout="60000">
			<formatter type="plain" />
			<formatter type="xml" />
			<classpath>
				<pathelement path="${java.class.path}" />
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement path="${bin.dir}" />
				<pathelement path="${test.work.dir}" />
				<pathelement path="${test.bin.dir}" />
			</classpath>
			<batchtest fork="yes" todir="${test.reports.dir}">
				<fileset dir="${test.bin.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="approval" depends="jar" description="Builds the Elk Approval device web application.">
		<property name="approval.base.filename" value="elk-approval" />
		<property name="approval.src.dir" value="${src.dir}/devices/Approval" />
		<property name="approval.war.dir" value="${dist.dir}/${approval.base.filename}-war" />
		<echo>Building the Elk Approval reference device web application...</echo>
		<echo>Build number: ${build.number}</echo>
		<!-- Builds exploded WAR file -->
		<mkdir dir="${approval.war.dir}" />
		<copy todir="${approval.war.dir}">
			<fileset dir="${approval.src.dir}/webapp">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${approval.war.dir}/WEB-INF/lib" flatten="true">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="servlet-api*.jar" />
				<exclude name="junit-3.8.1.jar" />
				<exclude name="httpunit-1.5.4.jar" />
			</fileset>
			<fileset dir="${dist.dir}">
				<include name="${base.filename}.jar" />
			</fileset>
		</copy>
		<!-- Update build number and timestamp in index.jsp -->
		<replace file="${approval.war.dir}/index.jsp">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<replace file="${approval.war.dir}/config/Device.xml">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<!-- Builds compressed WAR file -->
		<jar basedir="${approval.war.dir}" destfile="${dist.dir}/${approval.base.filename}.war" />
	</target>
	<target name="printing" depends="jar" description="Builds the Elk ConventionalPrinting reference device web application.">
		<property name="printing.base.filename" value="elk-printing" />
		<property name="printing.src.dir" value="${src.dir}/devices/ConventionalPrinting" />
		<property name="printing.war.dir" value="${dist.dir}/${printing.base.filename}-war" />
		<echo>Building the Elk ConventionalPrinting reference device web application...</echo>
		<echo>Build number: ${build.number}</echo>
		<!-- Builds exploded WAR file -->
		<mkdir dir="${printing.war.dir}" />
		<copy todir="${printing.war.dir}">
			<fileset dir="${printing.src.dir}/webapp">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${printing.war.dir}/WEB-INF/lib" flatten="true">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="servlet-api*.jar" />
				<exclude name="junit-3.8.1.jar" />
				<exclude name="httpunit-1.5.4.jar" />
			</fileset>
			<fileset dir="${dist.dir}">
				<include name="${base.filename}.jar" />
			</fileset>
		</copy>
		<!-- Update build number and timestamp in index.jsp -->
		<replace file="${printing.war.dir}/index.jsp">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<replace file="${printing.war.dir}/config/Device.xml">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<!-- Builds compressed WAR file -->
		<jar basedir="${printing.war.dir}" destfile="${dist.dir}/${printing.base.filename}.war" />
	</target>
	<target name="bindist" depends="approval,printing">
		<echo>Building Elk binary distribution...</echo>
		<!-- Create dist directories -->
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.bin.dir}" />
		<!-- Copy files to dist directories -->
		<copy todir="${dist.bin.dir}">
			<fileset dir="${dist.dir}">
				<include name="*.war" />
			</fileset>
		</copy>
		<mkdir dir="${dist.bin.dir}/examples" />
		<copy todir="${dist.bin.dir}/examples" flatten="true">
			<fileset dir="${dist.dir}">
				<include name="*-war/testdata/**/*.jdf" />
				<include name="*-war/testdata/**/*.jmf" />
			</fileset>
		</copy>
		<copy file="src/README.txt" todir="${dist.bin.dir}" />
		<copy file="src/LICENSE.txt" todir="${dist.bin.dir}" />
		<replace file="${dist.bin.dir}/README.txt">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<fixcrlf srcdir="${dist.bin.dir}" includes="README.txt" eol="dos" />
		<!-- Geneate documentation -->
		<echo>Generating documentation with Maven... (optional)</echo>
		<exec dir="." executable="mvn.bat" failonerror="false" os="Windows XP, Windows 2000, Windows" failifexecutionfails="false">
			<arg line="clean site" />
		</exec>
		<exec dir="." executable="mvn" failonerror="false" os="Unix, Mac OS X, Linux" failifexecutionfails="false">
			<arg line="clean site" />
		</exec>
		<copy todir="${dist.bin.dir}/doc" failonerror="false">
			<fileset dir="target/site" />
		</copy>

		<!-- Create ZIP archive -->
		<zip destfile="${dist.dir}/${base.filename}-bin.zip" basedir="${dist.bin.dir}" />
		<echo>Build number: ${build.number}</echo>
	</target>
	<target name="dist" depends="bindist,srcdist" />
	<target name="srcdist" depends="-init">
		<echo>Building Elk source distribution...</echo>
		<mkdir dir="${dist.src.dir}" />
		<copy todir="${dist.src.dir}">
			<fileset dir=".">
				<include name="src/**/*" />
				<include name="build.xml" />
				<include name="pom.xml" />
			</fileset>
		</copy>
		<copy file="src/README.txt" todir="${dist.src.dir}" />
		<copy file="src/LICENSE.txt" todir="${dist.src.dir}" />
		<!-- Prepare README file -->
		<replace file="${dist.src.dir}/README.txt">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<fixcrlf srcdir="${dist.src.dir}" includes="README.txt" eol="dos" />
		<zip destfile="${dist.dir}/${base.filename}-src.zip" basedir="${dist.src.dir}" />
		<echo>Build number: ${build.number}</echo>
	</target>
</project>
